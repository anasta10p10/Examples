# Загрузить массив `NumPy` из файла `"arr_pandas.npy" и преобразовать его в датафрейм. 
# Массив содержит данные по результатам соревнований Scottish Hill Races в 2000 году (полное описание на английском языке можно 
# посмотреть на [странице](https://vincentarelbundock.github.io/Rdatasets/doc/DAAG/races2000.html) с документацией по исходному 
# файлу с данными).
import numpy as np
import pandas as pd

arr = np.load('arr_pandas.npy', allow_pickle=True)
dat = pd.DataFrame(arr)  # arr - массив NumPy из файла

# Определить, сколько в датафрейме строк и столбцов. Привести код и указать ответ в виде текста или комментария к коду.

print(f'columns = {dat.shape[1]}, \n line = {dat.shape[0]}')

# Присвоить столбцам следующие названия (указаны с пояснениями): 

# * `id`: id участника
# * `dist`: расстояние в милях (по карте)
# * `climb`: высота, достигнутая на маршруте (в сумме за весь маршрут, в футах)
# * `time`: время (в часах)
# * `timef`: время для женщин (в часах)
# * `type`: тип гонки (*hill*, *marathon*, *relay*, *uphill* or *other*)
dat.columns = ['id', 'dist', 'climb', 'time', 'timef', 'type']
# print(dat)

# Вывести на экран значение высоты, достигнутой на маршруте участником *Norman's Law*.
dat.index = dat.id
print(dat.loc["Norman's Law", 'climb'])
print(dat.loc[dat['id']=="Norman's Law", 'climb'])

# Вывести на экран значения показателей `dist`, `climb` , `time` для первых 10 участников.

print(dat.loc[:, ['dist', 'climb', 'time']].head(10))

# Вывести на экран сводную информацию по датафрейму, которая включает типы всех столбцов. Сколько столбцов типа `float` в датафрейме? 
# Привести ответ на вопрос в виде текста или комментария к коду.
# arr = np.load('arr_pandas.npy', allow_pickle=True)
# dat = pd.DataFrame(arr)
# print(dat.info())
# print(dat.dtypes)

# Выбрать строки, которые соответствуют участникам эстафеты (*relay*).
print(dat[dat['type']=='relay'])

# Выбрать строки, которые соответствуют участникам гонки в холмах (*hill*), которые в сумме достигли высоты более 1000 футов. 
# Посчитать, сколько таких участников.

print(dat[(dat['type']=='hill') & (dat['climb'] > 1000)])
print(len(dat[(dat['type']=='hill') & (dat['climb'] > 1000)]))

# Выбрать строки, соответствующие участникам, которые либо достигли высоты более 4000 футов, либо потратили менее 0.5 часов.

print(dat[(dat['climb'] > 4000)|(dat['time']<0.5)])

# Создать столбец `time_min`, который содержит время маршрута, измеренное в минутах.

dat['time_min'] = dat['time'] * 60
print(dat.head())

# Создать столбец `year` с годом соревнований (везде 2000 год). Внимание: столбец с годом должен быть числовым (целочисленным).

dat['year'] = 2000
print(dat.head())
